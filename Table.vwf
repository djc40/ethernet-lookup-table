/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("clock")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("input_reg")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 98;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("input_reg[97]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[96]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[95]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[94]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[93]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[92]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[91]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[90]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[89]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[88]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[87]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[86]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[85]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[84]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[83]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[82]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[81]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[80]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[79]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[78]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[77]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[76]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[75]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[74]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[73]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[72]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[71]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[70]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[69]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[68]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[67]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[66]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[65]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[64]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[63]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[62]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[61]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[60]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[59]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[58]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[57]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[56]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[55]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[54]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[53]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[52]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[51]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[50]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[49]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[48]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[47]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[46]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[45]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[44]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[43]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[42]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[41]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[40]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[39]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[38]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[37]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[36]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[35]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[34]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[33]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[32]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_reg[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "input_reg";
}

SIGNAL("input_valid")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("output_reg")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 2;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("output_reg[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "output_reg";
}

SIGNAL("output_reg[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "output_reg";
}

SIGNAL("output_valid")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("random:myRandom|rand_temp")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 5;
	LSB_INDEX = 0;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("random:myRandom|rand_temp[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "random:myRandom|rand_temp";
}

SIGNAL("random:myRandom|rand_temp[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "random:myRandom|rand_temp";
}

SIGNAL("random:myRandom|rand_temp[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "random:myRandom|rand_temp";
}

SIGNAL("random:myRandom|rand_temp[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "random:myRandom|rand_temp";
}

SIGNAL("random:myRandom|rand_temp[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "random:myRandom|rand_temp";
}

SIGNAL("reset")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("D_FF_INPUT:input_register_DST|q")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 48;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("D_FF_INPUT:input_register_DST|q[47]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_INPUT:input_register_DST|q";
}

SIGNAL("D_FF_INPUT:input_register_DST|q[46]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_INPUT:input_register_DST|q";
}

SIGNAL("D_FF_INPUT:input_register_DST|q[45]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_INPUT:input_register_DST|q";
}

SIGNAL("D_FF_INPUT:input_register_DST|q[44]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_INPUT:input_register_DST|q";
}

SIGNAL("D_FF_INPUT:input_register_DST|q[43]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_INPUT:input_register_DST|q";
}

SIGNAL("D_FF_INPUT:input_register_DST|q[42]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_INPUT:input_register_DST|q";
}

SIGNAL("D_FF_INPUT:input_register_DST|q[41]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_INPUT:input_register_DST|q";
}

SIGNAL("D_FF_INPUT:input_register_DST|q[40]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_INPUT:input_register_DST|q";
}

SIGNAL("D_FF_INPUT:input_register_DST|q[39]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_INPUT:input_register_DST|q";
}

SIGNAL("D_FF_INPUT:input_register_DST|q[38]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_INPUT:input_register_DST|q";
}

SIGNAL("D_FF_INPUT:input_register_DST|q[37]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_INPUT:input_register_DST|q";
}

SIGNAL("D_FF_INPUT:input_register_DST|q[36]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_INPUT:input_register_DST|q";
}

SIGNAL("D_FF_INPUT:input_register_DST|q[35]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_INPUT:input_register_DST|q";
}

SIGNAL("D_FF_INPUT:input_register_DST|q[34]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_INPUT:input_register_DST|q";
}

SIGNAL("D_FF_INPUT:input_register_DST|q[33]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_INPUT:input_register_DST|q";
}

SIGNAL("D_FF_INPUT:input_register_DST|q[32]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_INPUT:input_register_DST|q";
}

SIGNAL("D_FF_INPUT:input_register_DST|q[31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_INPUT:input_register_DST|q";
}

SIGNAL("D_FF_INPUT:input_register_DST|q[30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_INPUT:input_register_DST|q";
}

SIGNAL("D_FF_INPUT:input_register_DST|q[29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_INPUT:input_register_DST|q";
}

SIGNAL("D_FF_INPUT:input_register_DST|q[28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_INPUT:input_register_DST|q";
}

SIGNAL("D_FF_INPUT:input_register_DST|q[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_INPUT:input_register_DST|q";
}

SIGNAL("D_FF_INPUT:input_register_DST|q[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_INPUT:input_register_DST|q";
}

SIGNAL("D_FF_INPUT:input_register_DST|q[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_INPUT:input_register_DST|q";
}

SIGNAL("D_FF_INPUT:input_register_DST|q[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_INPUT:input_register_DST|q";
}

SIGNAL("D_FF_INPUT:input_register_DST|q[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_INPUT:input_register_DST|q";
}

SIGNAL("D_FF_INPUT:input_register_DST|q[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_INPUT:input_register_DST|q";
}

SIGNAL("D_FF_INPUT:input_register_DST|q[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_INPUT:input_register_DST|q";
}

SIGNAL("D_FF_INPUT:input_register_DST|q[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_INPUT:input_register_DST|q";
}

SIGNAL("D_FF_INPUT:input_register_DST|q[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_INPUT:input_register_DST|q";
}

SIGNAL("D_FF_INPUT:input_register_DST|q[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_INPUT:input_register_DST|q";
}

SIGNAL("D_FF_INPUT:input_register_DST|q[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_INPUT:input_register_DST|q";
}

SIGNAL("D_FF_INPUT:input_register_DST|q[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_INPUT:input_register_DST|q";
}

SIGNAL("D_FF_INPUT:input_register_DST|q[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_INPUT:input_register_DST|q";
}

SIGNAL("D_FF_INPUT:input_register_DST|q[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_INPUT:input_register_DST|q";
}

SIGNAL("D_FF_INPUT:input_register_DST|q[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_INPUT:input_register_DST|q";
}

SIGNAL("D_FF_INPUT:input_register_DST|q[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_INPUT:input_register_DST|q";
}

SIGNAL("D_FF_INPUT:input_register_DST|q[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_INPUT:input_register_DST|q";
}

SIGNAL("D_FF_INPUT:input_register_DST|q[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_INPUT:input_register_DST|q";
}

SIGNAL("D_FF_INPUT:input_register_DST|q[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_INPUT:input_register_DST|q";
}

SIGNAL("D_FF_INPUT:input_register_DST|q[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_INPUT:input_register_DST|q";
}

SIGNAL("D_FF_INPUT:input_register_DST|q[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_INPUT:input_register_DST|q";
}

SIGNAL("D_FF_INPUT:input_register_DST|q[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_INPUT:input_register_DST|q";
}

SIGNAL("D_FF_INPUT:input_register_DST|q[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_INPUT:input_register_DST|q";
}

SIGNAL("D_FF_INPUT:input_register_DST|q[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_INPUT:input_register_DST|q";
}

SIGNAL("D_FF_INPUT:input_register_DST|q[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_INPUT:input_register_DST|q";
}

SIGNAL("D_FF_INPUT:input_register_DST|q[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_INPUT:input_register_DST|q";
}

SIGNAL("D_FF_INPUT:input_register_DST|q[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_INPUT:input_register_DST|q";
}

SIGNAL("D_FF_INPUT:input_register_DST|q[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_INPUT:input_register_DST|q";
}

SIGNAL("D_FF_VHDL:input_register_SRC_PRT|q")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 50;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("D_FF_VHDL:input_register_SRC_PRT|q[49]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_VHDL:input_register_SRC_PRT|q";
}

SIGNAL("D_FF_VHDL:input_register_SRC_PRT|q[48]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_VHDL:input_register_SRC_PRT|q";
}

SIGNAL("D_FF_VHDL:input_register_SRC_PRT|q[47]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_VHDL:input_register_SRC_PRT|q";
}

SIGNAL("D_FF_VHDL:input_register_SRC_PRT|q[46]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_VHDL:input_register_SRC_PRT|q";
}

SIGNAL("D_FF_VHDL:input_register_SRC_PRT|q[45]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_VHDL:input_register_SRC_PRT|q";
}

SIGNAL("D_FF_VHDL:input_register_SRC_PRT|q[44]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_VHDL:input_register_SRC_PRT|q";
}

SIGNAL("D_FF_VHDL:input_register_SRC_PRT|q[43]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_VHDL:input_register_SRC_PRT|q";
}

SIGNAL("D_FF_VHDL:input_register_SRC_PRT|q[42]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_VHDL:input_register_SRC_PRT|q";
}

SIGNAL("D_FF_VHDL:input_register_SRC_PRT|q[41]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_VHDL:input_register_SRC_PRT|q";
}

SIGNAL("D_FF_VHDL:input_register_SRC_PRT|q[40]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_VHDL:input_register_SRC_PRT|q";
}

SIGNAL("D_FF_VHDL:input_register_SRC_PRT|q[39]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_VHDL:input_register_SRC_PRT|q";
}

SIGNAL("D_FF_VHDL:input_register_SRC_PRT|q[38]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_VHDL:input_register_SRC_PRT|q";
}

SIGNAL("D_FF_VHDL:input_register_SRC_PRT|q[37]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_VHDL:input_register_SRC_PRT|q";
}

SIGNAL("D_FF_VHDL:input_register_SRC_PRT|q[36]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_VHDL:input_register_SRC_PRT|q";
}

SIGNAL("D_FF_VHDL:input_register_SRC_PRT|q[35]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_VHDL:input_register_SRC_PRT|q";
}

SIGNAL("D_FF_VHDL:input_register_SRC_PRT|q[34]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_VHDL:input_register_SRC_PRT|q";
}

SIGNAL("D_FF_VHDL:input_register_SRC_PRT|q[33]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_VHDL:input_register_SRC_PRT|q";
}

SIGNAL("D_FF_VHDL:input_register_SRC_PRT|q[32]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_VHDL:input_register_SRC_PRT|q";
}

SIGNAL("D_FF_VHDL:input_register_SRC_PRT|q[31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_VHDL:input_register_SRC_PRT|q";
}

SIGNAL("D_FF_VHDL:input_register_SRC_PRT|q[30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_VHDL:input_register_SRC_PRT|q";
}

SIGNAL("D_FF_VHDL:input_register_SRC_PRT|q[29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_VHDL:input_register_SRC_PRT|q";
}

SIGNAL("D_FF_VHDL:input_register_SRC_PRT|q[28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_VHDL:input_register_SRC_PRT|q";
}

SIGNAL("D_FF_VHDL:input_register_SRC_PRT|q[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_VHDL:input_register_SRC_PRT|q";
}

SIGNAL("D_FF_VHDL:input_register_SRC_PRT|q[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_VHDL:input_register_SRC_PRT|q";
}

SIGNAL("D_FF_VHDL:input_register_SRC_PRT|q[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_VHDL:input_register_SRC_PRT|q";
}

SIGNAL("D_FF_VHDL:input_register_SRC_PRT|q[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_VHDL:input_register_SRC_PRT|q";
}

SIGNAL("D_FF_VHDL:input_register_SRC_PRT|q[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_VHDL:input_register_SRC_PRT|q";
}

SIGNAL("D_FF_VHDL:input_register_SRC_PRT|q[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_VHDL:input_register_SRC_PRT|q";
}

SIGNAL("D_FF_VHDL:input_register_SRC_PRT|q[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_VHDL:input_register_SRC_PRT|q";
}

SIGNAL("D_FF_VHDL:input_register_SRC_PRT|q[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_VHDL:input_register_SRC_PRT|q";
}

SIGNAL("D_FF_VHDL:input_register_SRC_PRT|q[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_VHDL:input_register_SRC_PRT|q";
}

SIGNAL("D_FF_VHDL:input_register_SRC_PRT|q[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_VHDL:input_register_SRC_PRT|q";
}

SIGNAL("D_FF_VHDL:input_register_SRC_PRT|q[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_VHDL:input_register_SRC_PRT|q";
}

SIGNAL("D_FF_VHDL:input_register_SRC_PRT|q[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_VHDL:input_register_SRC_PRT|q";
}

SIGNAL("D_FF_VHDL:input_register_SRC_PRT|q[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_VHDL:input_register_SRC_PRT|q";
}

SIGNAL("D_FF_VHDL:input_register_SRC_PRT|q[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_VHDL:input_register_SRC_PRT|q";
}

SIGNAL("D_FF_VHDL:input_register_SRC_PRT|q[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_VHDL:input_register_SRC_PRT|q";
}

SIGNAL("D_FF_VHDL:input_register_SRC_PRT|q[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_VHDL:input_register_SRC_PRT|q";
}

SIGNAL("D_FF_VHDL:input_register_SRC_PRT|q[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_VHDL:input_register_SRC_PRT|q";
}

SIGNAL("D_FF_VHDL:input_register_SRC_PRT|q[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_VHDL:input_register_SRC_PRT|q";
}

SIGNAL("D_FF_VHDL:input_register_SRC_PRT|q[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_VHDL:input_register_SRC_PRT|q";
}

SIGNAL("D_FF_VHDL:input_register_SRC_PRT|q[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_VHDL:input_register_SRC_PRT|q";
}

SIGNAL("D_FF_VHDL:input_register_SRC_PRT|q[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_VHDL:input_register_SRC_PRT|q";
}

SIGNAL("D_FF_VHDL:input_register_SRC_PRT|q[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_VHDL:input_register_SRC_PRT|q";
}

SIGNAL("D_FF_VHDL:input_register_SRC_PRT|q[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_VHDL:input_register_SRC_PRT|q";
}

SIGNAL("D_FF_VHDL:input_register_SRC_PRT|q[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_VHDL:input_register_SRC_PRT|q";
}

SIGNAL("D_FF_VHDL:input_register_SRC_PRT|q[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_VHDL:input_register_SRC_PRT|q";
}

SIGNAL("D_FF_VHDL:input_register_SRC_PRT|q[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_VHDL:input_register_SRC_PRT|q";
}

SIGNAL("D_FF_VHDL:input_register_SRC_PRT|q[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_VHDL:input_register_SRC_PRT|q";
}

SIGNAL("D_FF_VHDL:input_register_SRC_PRT|q[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "D_FF_VHDL:input_register_SRC_PRT|q";
}

SIGNAL("broadcast")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

TRANSITION_LIST("clock")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 25;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
	}
}

TRANSITION_LIST("input_reg[97]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[96]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[95]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[94]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[93]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[92]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[91]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[90]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[89]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[88]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[87]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[86]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[85]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[84]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[83]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[82]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[81]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[80]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[79]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[78]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[77]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[76]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[75]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[74]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[73]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[72]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[71]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[70]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[69]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[68]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[67]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[66]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[65]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[64]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[63]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[62]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[61]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[60]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[59]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[58]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[57]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[56]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[55]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[54]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[53]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[52]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[51]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[50]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 280.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 640.0;
	}
}

TRANSITION_LIST("input_reg[49]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[48]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[47]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[46]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[45]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[44]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[43]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[42]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[41]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[40]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[39]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[38]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[37]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[36]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[35]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[34]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[33]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[32]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[31]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[30]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[29]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[28]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[27]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[26]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[25]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[24]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 280.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("input_reg[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 800.0;
	}
}

TRANSITION_LIST("input_reg[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 280.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 640.0;
	}
}

TRANSITION_LIST("input_valid")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 320.0;
	}
}

TRANSITION_LIST("output_reg[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("output_reg[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("output_valid")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("random:myRandom|rand_temp[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("random:myRandom|rand_temp[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("random:myRandom|rand_temp[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("random:myRandom|rand_temp[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("random:myRandom|rand_temp[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("reset")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 990.0;
	}
}

TRANSITION_LIST("D_FF_INPUT:input_register_DST|q[47]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_INPUT:input_register_DST|q[46]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_INPUT:input_register_DST|q[45]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_INPUT:input_register_DST|q[44]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_INPUT:input_register_DST|q[43]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_INPUT:input_register_DST|q[42]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_INPUT:input_register_DST|q[41]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_INPUT:input_register_DST|q[40]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_INPUT:input_register_DST|q[39]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_INPUT:input_register_DST|q[38]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_INPUT:input_register_DST|q[37]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_INPUT:input_register_DST|q[36]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_INPUT:input_register_DST|q[35]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_INPUT:input_register_DST|q[34]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_INPUT:input_register_DST|q[33]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_INPUT:input_register_DST|q[32]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_INPUT:input_register_DST|q[31]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_INPUT:input_register_DST|q[30]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_INPUT:input_register_DST|q[29]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_INPUT:input_register_DST|q[28]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_INPUT:input_register_DST|q[27]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_INPUT:input_register_DST|q[26]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_INPUT:input_register_DST|q[25]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_INPUT:input_register_DST|q[24]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_INPUT:input_register_DST|q[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_INPUT:input_register_DST|q[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_INPUT:input_register_DST|q[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_INPUT:input_register_DST|q[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_INPUT:input_register_DST|q[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_INPUT:input_register_DST|q[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_INPUT:input_register_DST|q[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_INPUT:input_register_DST|q[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_INPUT:input_register_DST|q[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_INPUT:input_register_DST|q[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_INPUT:input_register_DST|q[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_INPUT:input_register_DST|q[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_INPUT:input_register_DST|q[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_INPUT:input_register_DST|q[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_INPUT:input_register_DST|q[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_INPUT:input_register_DST|q[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_INPUT:input_register_DST|q[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_INPUT:input_register_DST|q[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_INPUT:input_register_DST|q[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_INPUT:input_register_DST|q[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_INPUT:input_register_DST|q[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_INPUT:input_register_DST|q[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_INPUT:input_register_DST|q[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_INPUT:input_register_DST|q[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_VHDL:input_register_SRC_PRT|q[49]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_VHDL:input_register_SRC_PRT|q[48]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_VHDL:input_register_SRC_PRT|q[47]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_VHDL:input_register_SRC_PRT|q[46]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_VHDL:input_register_SRC_PRT|q[45]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_VHDL:input_register_SRC_PRT|q[44]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_VHDL:input_register_SRC_PRT|q[43]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_VHDL:input_register_SRC_PRT|q[42]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_VHDL:input_register_SRC_PRT|q[41]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_VHDL:input_register_SRC_PRT|q[40]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_VHDL:input_register_SRC_PRT|q[39]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_VHDL:input_register_SRC_PRT|q[38]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_VHDL:input_register_SRC_PRT|q[37]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_VHDL:input_register_SRC_PRT|q[36]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_VHDL:input_register_SRC_PRT|q[35]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_VHDL:input_register_SRC_PRT|q[34]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_VHDL:input_register_SRC_PRT|q[33]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_VHDL:input_register_SRC_PRT|q[32]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_VHDL:input_register_SRC_PRT|q[31]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_VHDL:input_register_SRC_PRT|q[30]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_VHDL:input_register_SRC_PRT|q[29]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_VHDL:input_register_SRC_PRT|q[28]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_VHDL:input_register_SRC_PRT|q[27]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_VHDL:input_register_SRC_PRT|q[26]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_VHDL:input_register_SRC_PRT|q[25]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_VHDL:input_register_SRC_PRT|q[24]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_VHDL:input_register_SRC_PRT|q[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_VHDL:input_register_SRC_PRT|q[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_VHDL:input_register_SRC_PRT|q[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_VHDL:input_register_SRC_PRT|q[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_VHDL:input_register_SRC_PRT|q[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_VHDL:input_register_SRC_PRT|q[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_VHDL:input_register_SRC_PRT|q[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_VHDL:input_register_SRC_PRT|q[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_VHDL:input_register_SRC_PRT|q[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_VHDL:input_register_SRC_PRT|q[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_VHDL:input_register_SRC_PRT|q[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_VHDL:input_register_SRC_PRT|q[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_VHDL:input_register_SRC_PRT|q[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_VHDL:input_register_SRC_PRT|q[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_VHDL:input_register_SRC_PRT|q[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_VHDL:input_register_SRC_PRT|q[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_VHDL:input_register_SRC_PRT|q[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_VHDL:input_register_SRC_PRT|q[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_VHDL:input_register_SRC_PRT|q[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_VHDL:input_register_SRC_PRT|q[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_VHDL:input_register_SRC_PRT|q[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_VHDL:input_register_SRC_PRT|q[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_VHDL:input_register_SRC_PRT|q[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("D_FF_VHDL:input_register_SRC_PRT|q[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("broadcast")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "broadcast";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "output_reg";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
	CHILDREN = 2, 3;
}

DISPLAY_LINE
{
	CHANNEL = "output_reg[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "output_reg[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "output_valid";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "clock";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
	CHILDREN = 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[97]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[96]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[95]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[94]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[93]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[92]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[91]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[90]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[89]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[88]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[87]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[86]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[85]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[84]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[83]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[82]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[81]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[80]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[79]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[78]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[77]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[76]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[75]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[74]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[73]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[72]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[71]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[70]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[69]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[68]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[67]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[66]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[65]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[64]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[63]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[62]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[61]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[60]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[59]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[58]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[57]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[56]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[55]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[54]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[53]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[52]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[51]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[50]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[49]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[48]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[47]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[46]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[45]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[44]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 60;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[43]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 61;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[42]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[41]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 63;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[40]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 64;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[39]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 65;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[38]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 66;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[37]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 67;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[36]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 68;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[35]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 69;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[34]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 70;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[33]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 71;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[32]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 72;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 73;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 74;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 75;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 76;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 77;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 78;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 79;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 80;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 81;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 82;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 83;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 84;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 85;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 86;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 87;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 88;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 89;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 90;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 91;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 92;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 93;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 94;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 95;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 96;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 97;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 98;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 99;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 100;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 101;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 102;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 103;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_reg[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 104;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "input_valid";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 105;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "random:myRandom|rand_temp";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 106;
	TREE_LEVEL = 0;
	CHILDREN = 107, 108, 109, 110, 111;
}

DISPLAY_LINE
{
	CHANNEL = "random:myRandom|rand_temp[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 107;
	TREE_LEVEL = 1;
	PARENT = 106;
}

DISPLAY_LINE
{
	CHANNEL = "random:myRandom|rand_temp[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 108;
	TREE_LEVEL = 1;
	PARENT = 106;
}

DISPLAY_LINE
{
	CHANNEL = "random:myRandom|rand_temp[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 109;
	TREE_LEVEL = 1;
	PARENT = 106;
}

DISPLAY_LINE
{
	CHANNEL = "random:myRandom|rand_temp[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 110;
	TREE_LEVEL = 1;
	PARENT = 106;
}

DISPLAY_LINE
{
	CHANNEL = "random:myRandom|rand_temp[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 111;
	TREE_LEVEL = 1;
	PARENT = 106;
}

DISPLAY_LINE
{
	CHANNEL = "reset";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 112;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_INPUT:input_register_DST|q";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 113;
	TREE_LEVEL = 0;
	CHILDREN = 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_INPUT:input_register_DST|q[47]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 114;
	TREE_LEVEL = 1;
	PARENT = 113;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_INPUT:input_register_DST|q[46]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 115;
	TREE_LEVEL = 1;
	PARENT = 113;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_INPUT:input_register_DST|q[45]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 116;
	TREE_LEVEL = 1;
	PARENT = 113;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_INPUT:input_register_DST|q[44]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 117;
	TREE_LEVEL = 1;
	PARENT = 113;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_INPUT:input_register_DST|q[43]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 118;
	TREE_LEVEL = 1;
	PARENT = 113;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_INPUT:input_register_DST|q[42]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 119;
	TREE_LEVEL = 1;
	PARENT = 113;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_INPUT:input_register_DST|q[41]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 120;
	TREE_LEVEL = 1;
	PARENT = 113;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_INPUT:input_register_DST|q[40]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 121;
	TREE_LEVEL = 1;
	PARENT = 113;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_INPUT:input_register_DST|q[39]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 122;
	TREE_LEVEL = 1;
	PARENT = 113;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_INPUT:input_register_DST|q[38]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 123;
	TREE_LEVEL = 1;
	PARENT = 113;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_INPUT:input_register_DST|q[37]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 124;
	TREE_LEVEL = 1;
	PARENT = 113;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_INPUT:input_register_DST|q[36]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 125;
	TREE_LEVEL = 1;
	PARENT = 113;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_INPUT:input_register_DST|q[35]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 126;
	TREE_LEVEL = 1;
	PARENT = 113;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_INPUT:input_register_DST|q[34]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 127;
	TREE_LEVEL = 1;
	PARENT = 113;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_INPUT:input_register_DST|q[33]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 128;
	TREE_LEVEL = 1;
	PARENT = 113;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_INPUT:input_register_DST|q[32]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 129;
	TREE_LEVEL = 1;
	PARENT = 113;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_INPUT:input_register_DST|q[31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 130;
	TREE_LEVEL = 1;
	PARENT = 113;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_INPUT:input_register_DST|q[30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 131;
	TREE_LEVEL = 1;
	PARENT = 113;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_INPUT:input_register_DST|q[29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 132;
	TREE_LEVEL = 1;
	PARENT = 113;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_INPUT:input_register_DST|q[28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 133;
	TREE_LEVEL = 1;
	PARENT = 113;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_INPUT:input_register_DST|q[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 134;
	TREE_LEVEL = 1;
	PARENT = 113;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_INPUT:input_register_DST|q[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 135;
	TREE_LEVEL = 1;
	PARENT = 113;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_INPUT:input_register_DST|q[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 136;
	TREE_LEVEL = 1;
	PARENT = 113;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_INPUT:input_register_DST|q[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 137;
	TREE_LEVEL = 1;
	PARENT = 113;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_INPUT:input_register_DST|q[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 138;
	TREE_LEVEL = 1;
	PARENT = 113;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_INPUT:input_register_DST|q[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 139;
	TREE_LEVEL = 1;
	PARENT = 113;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_INPUT:input_register_DST|q[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 140;
	TREE_LEVEL = 1;
	PARENT = 113;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_INPUT:input_register_DST|q[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 141;
	TREE_LEVEL = 1;
	PARENT = 113;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_INPUT:input_register_DST|q[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 142;
	TREE_LEVEL = 1;
	PARENT = 113;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_INPUT:input_register_DST|q[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 143;
	TREE_LEVEL = 1;
	PARENT = 113;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_INPUT:input_register_DST|q[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 144;
	TREE_LEVEL = 1;
	PARENT = 113;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_INPUT:input_register_DST|q[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 145;
	TREE_LEVEL = 1;
	PARENT = 113;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_INPUT:input_register_DST|q[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 146;
	TREE_LEVEL = 1;
	PARENT = 113;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_INPUT:input_register_DST|q[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 147;
	TREE_LEVEL = 1;
	PARENT = 113;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_INPUT:input_register_DST|q[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 148;
	TREE_LEVEL = 1;
	PARENT = 113;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_INPUT:input_register_DST|q[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 149;
	TREE_LEVEL = 1;
	PARENT = 113;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_INPUT:input_register_DST|q[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 150;
	TREE_LEVEL = 1;
	PARENT = 113;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_INPUT:input_register_DST|q[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 151;
	TREE_LEVEL = 1;
	PARENT = 113;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_INPUT:input_register_DST|q[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 152;
	TREE_LEVEL = 1;
	PARENT = 113;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_INPUT:input_register_DST|q[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 153;
	TREE_LEVEL = 1;
	PARENT = 113;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_INPUT:input_register_DST|q[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 154;
	TREE_LEVEL = 1;
	PARENT = 113;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_INPUT:input_register_DST|q[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 155;
	TREE_LEVEL = 1;
	PARENT = 113;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_INPUT:input_register_DST|q[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 156;
	TREE_LEVEL = 1;
	PARENT = 113;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_INPUT:input_register_DST|q[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 157;
	TREE_LEVEL = 1;
	PARENT = 113;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_INPUT:input_register_DST|q[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 158;
	TREE_LEVEL = 1;
	PARENT = 113;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_INPUT:input_register_DST|q[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 159;
	TREE_LEVEL = 1;
	PARENT = 113;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_INPUT:input_register_DST|q[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 160;
	TREE_LEVEL = 1;
	PARENT = 113;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_INPUT:input_register_DST|q[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 161;
	TREE_LEVEL = 1;
	PARENT = 113;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_VHDL:input_register_SRC_PRT|q";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 162;
	TREE_LEVEL = 0;
	CHILDREN = 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_VHDL:input_register_SRC_PRT|q[49]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 163;
	TREE_LEVEL = 1;
	PARENT = 162;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_VHDL:input_register_SRC_PRT|q[48]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 164;
	TREE_LEVEL = 1;
	PARENT = 162;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_VHDL:input_register_SRC_PRT|q[47]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 165;
	TREE_LEVEL = 1;
	PARENT = 162;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_VHDL:input_register_SRC_PRT|q[46]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 166;
	TREE_LEVEL = 1;
	PARENT = 162;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_VHDL:input_register_SRC_PRT|q[45]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 167;
	TREE_LEVEL = 1;
	PARENT = 162;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_VHDL:input_register_SRC_PRT|q[44]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 168;
	TREE_LEVEL = 1;
	PARENT = 162;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_VHDL:input_register_SRC_PRT|q[43]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 169;
	TREE_LEVEL = 1;
	PARENT = 162;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_VHDL:input_register_SRC_PRT|q[42]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 170;
	TREE_LEVEL = 1;
	PARENT = 162;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_VHDL:input_register_SRC_PRT|q[41]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 171;
	TREE_LEVEL = 1;
	PARENT = 162;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_VHDL:input_register_SRC_PRT|q[40]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 172;
	TREE_LEVEL = 1;
	PARENT = 162;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_VHDL:input_register_SRC_PRT|q[39]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 173;
	TREE_LEVEL = 1;
	PARENT = 162;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_VHDL:input_register_SRC_PRT|q[38]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 174;
	TREE_LEVEL = 1;
	PARENT = 162;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_VHDL:input_register_SRC_PRT|q[37]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 175;
	TREE_LEVEL = 1;
	PARENT = 162;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_VHDL:input_register_SRC_PRT|q[36]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 176;
	TREE_LEVEL = 1;
	PARENT = 162;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_VHDL:input_register_SRC_PRT|q[35]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 177;
	TREE_LEVEL = 1;
	PARENT = 162;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_VHDL:input_register_SRC_PRT|q[34]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 178;
	TREE_LEVEL = 1;
	PARENT = 162;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_VHDL:input_register_SRC_PRT|q[33]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 179;
	TREE_LEVEL = 1;
	PARENT = 162;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_VHDL:input_register_SRC_PRT|q[32]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 180;
	TREE_LEVEL = 1;
	PARENT = 162;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_VHDL:input_register_SRC_PRT|q[31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 181;
	TREE_LEVEL = 1;
	PARENT = 162;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_VHDL:input_register_SRC_PRT|q[30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 182;
	TREE_LEVEL = 1;
	PARENT = 162;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_VHDL:input_register_SRC_PRT|q[29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 183;
	TREE_LEVEL = 1;
	PARENT = 162;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_VHDL:input_register_SRC_PRT|q[28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 184;
	TREE_LEVEL = 1;
	PARENT = 162;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_VHDL:input_register_SRC_PRT|q[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 185;
	TREE_LEVEL = 1;
	PARENT = 162;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_VHDL:input_register_SRC_PRT|q[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 186;
	TREE_LEVEL = 1;
	PARENT = 162;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_VHDL:input_register_SRC_PRT|q[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 187;
	TREE_LEVEL = 1;
	PARENT = 162;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_VHDL:input_register_SRC_PRT|q[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 188;
	TREE_LEVEL = 1;
	PARENT = 162;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_VHDL:input_register_SRC_PRT|q[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 189;
	TREE_LEVEL = 1;
	PARENT = 162;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_VHDL:input_register_SRC_PRT|q[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 190;
	TREE_LEVEL = 1;
	PARENT = 162;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_VHDL:input_register_SRC_PRT|q[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 191;
	TREE_LEVEL = 1;
	PARENT = 162;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_VHDL:input_register_SRC_PRT|q[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 192;
	TREE_LEVEL = 1;
	PARENT = 162;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_VHDL:input_register_SRC_PRT|q[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 193;
	TREE_LEVEL = 1;
	PARENT = 162;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_VHDL:input_register_SRC_PRT|q[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 194;
	TREE_LEVEL = 1;
	PARENT = 162;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_VHDL:input_register_SRC_PRT|q[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 195;
	TREE_LEVEL = 1;
	PARENT = 162;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_VHDL:input_register_SRC_PRT|q[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 196;
	TREE_LEVEL = 1;
	PARENT = 162;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_VHDL:input_register_SRC_PRT|q[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 197;
	TREE_LEVEL = 1;
	PARENT = 162;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_VHDL:input_register_SRC_PRT|q[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 198;
	TREE_LEVEL = 1;
	PARENT = 162;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_VHDL:input_register_SRC_PRT|q[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 199;
	TREE_LEVEL = 1;
	PARENT = 162;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_VHDL:input_register_SRC_PRT|q[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 200;
	TREE_LEVEL = 1;
	PARENT = 162;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_VHDL:input_register_SRC_PRT|q[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 201;
	TREE_LEVEL = 1;
	PARENT = 162;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_VHDL:input_register_SRC_PRT|q[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 202;
	TREE_LEVEL = 1;
	PARENT = 162;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_VHDL:input_register_SRC_PRT|q[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 203;
	TREE_LEVEL = 1;
	PARENT = 162;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_VHDL:input_register_SRC_PRT|q[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 204;
	TREE_LEVEL = 1;
	PARENT = 162;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_VHDL:input_register_SRC_PRT|q[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 205;
	TREE_LEVEL = 1;
	PARENT = 162;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_VHDL:input_register_SRC_PRT|q[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 206;
	TREE_LEVEL = 1;
	PARENT = 162;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_VHDL:input_register_SRC_PRT|q[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 207;
	TREE_LEVEL = 1;
	PARENT = 162;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_VHDL:input_register_SRC_PRT|q[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 208;
	TREE_LEVEL = 1;
	PARENT = 162;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_VHDL:input_register_SRC_PRT|q[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 209;
	TREE_LEVEL = 1;
	PARENT = 162;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_VHDL:input_register_SRC_PRT|q[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 210;
	TREE_LEVEL = 1;
	PARENT = 162;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_VHDL:input_register_SRC_PRT|q[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 211;
	TREE_LEVEL = 1;
	PARENT = 162;
}

DISPLAY_LINE
{
	CHANNEL = "D_FF_VHDL:input_register_SRC_PRT|q[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 212;
	TREE_LEVEL = 1;
	PARENT = 162;
}

TIME_BAR
{
	TIME = 260000;
	MASTER = TRUE;
}
;
